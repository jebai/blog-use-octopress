<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[明陈的博客]]></title>
  <link href="http://jebai.github.io/atom.xml" rel="self"/>
  <link href="http://jebai.github.io/"/>
  <updated>2014-01-01T01:26:11+08:00</updated>
  <id>http://jebai.github.io/</id>
  <author>
    <name><![CDATA[明陈]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Titanium Alloy 处理平台差异]]></title>
    <link href="http://jebai.github.io/blog/2014/01/01/titanium-alloy-chu-li-ping-tai-chai-yi/"/>
    <updated>2014-01-01T00:43:01+08:00</updated>
    <id>http://jebai.github.io/blog/2014/01/01/titanium-alloy-chu-li-ping-tai-chai-yi</id>
    <content type="html"><![CDATA[<p>不用 Alloy 时，对于平台的差异，比如在iOS中使用的导航条，在安卓中就没办法使用，需要另外处理。这样的场景基本只有在js中用if……else……搞定(虽然可以写的比较隐蔽，但终归还是要写)。</p>

<!--more-->


<p>使用 Alloy 后，因为控件的定义都定义在view的xml文件中，对于平台差异，当然也可以还是在controller中用条件判断语句来处理，不过这样是不是没有了alloy的style了呢。</p>

<p>Alloy提供了一些处理平台差异的手段。</p>

<ol>
<li><p>Markup 中的platform属性</p>

<p>如下代码中，id为index的Window 只有在mobileweb上运行时才会创建，同理，id为master的 Require 只有在android环境下才会被操作。</p></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Alloy&gt;</span>
</span><span class='line'>  <span class="c">&lt;!-- Mobileweb --&gt;</span>
</span><span class='line'>      <span class="nt">&lt;Window</span> <span class="na">id=</span><span class="s">&quot;index&quot;</span> <span class="na">platform=</span><span class="s">&quot;mobileweb&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;NavigationGroup</span> <span class="na">id=</span><span class="s">&quot;navgroup&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;Require</span> <span class="na">src=</span><span class="s">&quot;master&quot;</span> <span class="na">id=</span><span class="s">&quot;master&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/NavigationGroup&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/Window&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c">&lt;!-- Android --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Require</span> <span class="na">id=</span><span class="s">&quot;master&quot;</span> <span class="na">src=</span><span class="s">&quot;master&quot;</span> <span class="na">platform=</span><span class="s">&quot;android&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/Alloy&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>对不同的平台单独写一个view文件，用对应平台名称的目录包起来</li>
</ol>


<p><img src="http://jebai.github.io/images/2014/1/1/1.jpg" width="259" height="427" title="'opacity=.9'" ></p>

<p>在编译时，会根据目标平台的不同自动定位正确的文件，并且在控制台显示</p>

<p><img src="http://jebai.github.io/images/2014/1/1/2.png" width="545" height="399" title="'opacity=.9'" ></p>

<p><img src="http://jebai.github.io/images/2014/1/1/3.jpg" width="505" height="362" title="'opacity=.9'" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Titanium View Transparency]]></title>
    <link href="http://jebai.github.io/blog/2013/12/31/titanium-view-transparency/"/>
    <updated>2013-12-31T22:31:26+08:00</updated>
    <id>http://jebai.github.io/blog/2013/12/31/titanium-view-transparency</id>
    <content type="html"><![CDATA[<p>视图的的透明是设计中经常用到的，有背景的透明，半透明，整体的透明，半透明等。</p>

<!--more-->


<p>如下代码是默认的alloy工程中的，创建了一个 Label。为了便于分析，在container的样式上加了一个背景。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Alloy&gt;</span>
</span><span class='line'>  <span class="nt">&lt;Window</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;Label</span> <span class="na">id=</span><span class="s">&quot;label&quot;</span> <span class="na">onClick=</span><span class="s">&quot;doClick&quot;</span><span class="nt">&gt;</span>Hello, World<span class="nt">&lt;/Label&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/Window&gt;</span>
</span><span class='line'><span class="nt">&lt;/Alloy&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="s2">&quot;.container&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">backgroundColor</span><span class="o">:</span><span class="s2">&quot;white&quot;</span><span class="o">,</span>
</span><span class='line'>  <span class="n">backgroundImage</span><span class="o">:</span> <span class="s2">&quot;/images/bg.jpg&quot;</span>
</span><span class='line'><span class="p">}</span><span class="o">,</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;Label&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">width</span><span class="o">:</span> <span class="n">Ti</span><span class="o">.</span><span class="n">UI</span><span class="o">.</span><span class="n">SIZE</span><span class="o">,</span>
</span><span class='line'>  <span class="k">height</span><span class="o">:</span> <span class="n">Ti</span><span class="o">.</span><span class="n">UI</span><span class="o">.</span><span class="n">SIZE</span><span class="o">,</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="s2">&quot;#000&quot;</span><span class="o">,</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://jebai.github.io/images/2013/12/31/1.png" width="240" height="360"></p>

<h3>给 Label 设置背景颜色</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="s2">&quot;Label&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">width</span><span class="o">:</span> <span class="n">Ti</span><span class="o">.</span><span class="n">UI</span><span class="o">.</span><span class="n">SIZE</span><span class="o">,</span>
</span><span class='line'>  <span class="k">height</span><span class="o">:</span> <span class="n">Ti</span><span class="o">.</span><span class="n">UI</span><span class="o">.</span><span class="n">SIZE</span><span class="o">,</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="s2">&quot;#000&quot;</span><span class="o">,</span>
</span><span class='line'>  <span class="n">backgroundColor</span><span class="o">:</span> <span class="s1">&#39;red&#39;</span><span class="o">,</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://jebai.github.io/images/2013/12/31/2.png" width="240" height="360"></p>

<h3>设置整体的透明度</h3>

<p>查阅相关文档后，在 View 属性中有一个不透明度的属性<a href="(http://docs.appcelerator.com/titanium/latest/#!/api/Titanium.UI.View-property-opacity)" title="访问官方文档">opacity</a></p>

<p>设置opacity的值可以调整整个view的透明度，默认值为1，有效取值区间为0~1</p>

<p>值为1时，即完全不透明，为0时，即完全透明</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="s2">&quot;Label&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">width</span><span class="o">:</span> <span class="n">Ti</span><span class="o">.</span><span class="n">UI</span><span class="o">.</span><span class="n">SIZE</span><span class="o">,</span>
</span><span class='line'>  <span class="k">height</span><span class="o">:</span> <span class="n">Ti</span><span class="o">.</span><span class="n">UI</span><span class="o">.</span><span class="n">SIZE</span><span class="o">,</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="s2">&quot;#000&quot;</span><span class="o">,</span>
</span><span class='line'>  <span class="n">backgroundColor</span><span class="o">:</span> <span class="s1">&#39;red&#39;</span><span class="o">,</span>
</span><span class='line'>  <span class="k">opacity</span><span class="o">:</span> <span class="s1">&#39;.5&#39;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://jebai.github.io/images/2013/12/31/3.png" width="240" height="360" title="'opacity=.1'" >
<img src="http://jebai.github.io/images/2013/12/31/4.png" width="240" height="360" title="'opacity=.5'" >
<img src="http://jebai.github.io/images/2013/12/31/5.png" width="240" height="360" title="'opacity=.9'" ></p>

<h3>背景的透明</h3>

<p>背景的透明，可以通过设置backgroundColor来值来控制。</p>

<p>可以设置backgroundColor的值为&#8221;transparent&#8221;为使背景全透明</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="s2">&quot;Label&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">width</span><span class="o">:</span> <span class="n">Ti</span><span class="o">.</span><span class="n">UI</span><span class="o">.</span><span class="n">SIZE</span><span class="o">,</span>
</span><span class='line'>  <span class="k">height</span><span class="o">:</span> <span class="n">Ti</span><span class="o">.</span><span class="n">UI</span><span class="o">.</span><span class="n">SIZE</span><span class="o">,</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="s2">&quot;#000&quot;</span><span class="o">,</span>
</span><span class='line'>  <span class="n">backgroundColor</span><span class="o">:</span> <span class="s1">&#39;transparent&#39;</span><span class="o">,</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://jebai.github.io/images/2013/12/31/6.png" width="240" height="360" title="'backgroundColor值为transparent'" ></p>

<p>可以设置backgroundColor的值为来达到背景半透明的效果，并且不影响前景</p>

<p>颜色格式是 ARGB，A 的值控制不透明的程度</p>

<p>下面的背景颜色值中从左到到右，8F即为 Alpha，FF 为 Red，第一个 00 为 Green 值，第二个 00 为 Blue 值</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="s2">&quot;Label&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">width</span><span class="o">:</span> <span class="n">Ti</span><span class="o">.</span><span class="n">UI</span><span class="o">.</span><span class="n">SIZE</span><span class="o">,</span>
</span><span class='line'>  <span class="k">height</span><span class="o">:</span> <span class="n">Ti</span><span class="o">.</span><span class="n">UI</span><span class="o">.</span><span class="n">SIZE</span><span class="o">,</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="s2">&quot;#000&quot;</span><span class="o">,</span>
</span><span class='line'>  <span class="n">backgroundColor</span><span class="o">:</span> <span class="s1">&#39;#8FFF0000&#39;</span><span class="o">,</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://jebai.github.io/images/2013/12/31/7.png" width="240" height="360" title="'backgroundColor值为transparent'" ></p>

<p>不得不吐槽的是，Titanium 中的颜色模式并不是常规的 RGBA 模式，而是 ARGB 模式，因此在设置颜色和透明度时，需要把透明度设置在开始的位置。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS UICollectionView]]></title>
    <link href="http://jebai.github.io/blog/2013/12/30/ios-uicollectionview/"/>
    <updated>2013-12-30T12:06:29+08:00</updated>
    <id>http://jebai.github.io/blog/2013/12/30/ios-uicollectionview</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用GPUImage给图片加上滤镜]]></title>
    <link href="http://jebai.github.io/blog/2013/12/26/shi-yong-gpuimagegei-tu-pian-jia-shang-lu-jing/"/>
    <updated>2013-12-26T20:15:22+08:00</updated>
    <id>http://jebai.github.io/blog/2013/12/26/shi-yong-gpuimagegei-tu-pian-jia-shang-lu-jing</id>
    <content type="html"><![CDATA[<p>用 GPU 给图片或是在摄像头拍照时加上滤镜效果是很简单的，下面的流程演示了如何给一张图片加上滤镜效果。</p>

<!--more-->


<ul>
<li>从源图片构造GPUImagePicture</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">UIImage</span><span class="o">*</span> <span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIImaeg</span> <span class="nl">imageNamed:</span><span class="s">@&quot;testImage&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">GPUImagePicture</span><span class="o">*</span> <span class="n">imageSource</span> <span class="o">=</span> <span class="p">[[</span><span class="n">GPUImagePicture</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithImage:</span><span class="n">image</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>构造 IFImageFilter</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">IFImageFilter</span><span class="o">*</span>      <span class="n">filter</span><span class="p">;</span>
</span><span class='line'><span class="n">filter</span> <span class="o">=</span> <span class="p">[[</span><span class="n">IFAmaroFilter</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>构建对应的 滤镜效果 需要的图片的 GPUImagePicture</p>

<p>一个滤镜效果可能由多个图片组合成而成</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSArray</span><span class="o">*</span> <span class="n">sourceNames</span><span class="p">;</span>
</span><span class='line'><span class="n">sourceNames</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;blackboard1024&quot;</span><span class="p">,</span> <span class="s">@&quot;overlayMap&quot;</span><span class="p">,</span> <span class="s">@&quot;amaroMap&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSString</span><span class="o">*</span> <span class="n">sourceName</span> <span class="k">in</span> <span class="n">sourceNames</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">sourcePictures</span> <span class="nl">addObject:</span><span class="p">[[</span><span class="n">GPUImagePicture</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithImage:</span><span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="n">sourceName</span><span class="p">]]];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>将对源图片及对应的滤镜的图片执行addTarget</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">imageSource</span> <span class="nl">addTarget:</span><span class="n">filter</span><span class="p">];</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">GPUImagePicture</span><span class="o">*</span> <span class="n">sourcePicture</span> <span class="k">in</span> <span class="n">sourcePictures</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">sourcePicture</span> <span class="nl">addTarget:</span><span class="n">filter</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>对源图片执行 processImage</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">imageSource</span> <span class="n">processImage</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>对滤镜对像执行 imageFromCurrentlyProcessedOutput</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">image</span> <span class="o">=</span> <span class="p">[[</span><span class="n">filter</span> <span class="n">imageFromCurrentlyProcessedOutput</span><span class="p">]</span> <span class="nl">imageRotatedByDegrees:</span><span class="mi">0</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 使用Codeblock]]></title>
    <link href="http://jebai.github.io/blog/2013/12/24/octopress-shi-yong-codeblock/"/>
    <updated>2013-12-24T16:03:01+08:00</updated>
    <id>http://jebai.github.io/blog/2013/12/24/octopress-shi-yong-codeblock</id>
    <content type="html"><![CDATA[<p><a href="http://octopress.org/docs/plugins/codeblock/">官方文档</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Titanium 定时器]]></title>
    <link href="http://jebai.github.io/blog/2013/12/24/titanium-ding-shi-qi/"/>
    <updated>2013-12-24T15:47:55+08:00</updated>
    <id>http://jebai.github.io/blog/2013/12/24/titanium-ding-shi-qi</id>
    <content type="html"><![CDATA[<p>Ti框架提供的定时器与一般语言的定时器不太一样，采用如下形式来定义</p>

<!--more-->


<h4>setTimeout 使用</h4>

<figure class='code'><figcaption><span>Javascript Array Syntax</span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>   <span class="nx">toDoLater</span><span class="p">();</span>
</span><span class='line'><span class="p">},</span> <span class="mi">1000</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h4>setInterval 使用</h4>

<figure class='code'><figcaption><span>Javascript Array Syntax</span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">timer</span> <span class="o">=</span> <span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">count</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">label</span><span class="p">.</span><span class="nx">text</span> <span class="o">=</span> <span class="s2">&quot;count: &quot;</span> <span class="o">+</span> <span class="nx">count</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">count</span> <span class="o">==</span> <span class="mi">10</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">clearInterval</span><span class="p">(</span><span class="nx">timer</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">},</span> <span class="mi">1000</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://docs.appcelerator.com/titanium/latest/#!/api/Global-method-setTimeout">官方文档说明：setTimeout</a></p>

<p><a href="http://docs.appcelerator.com/titanium/latest/#!/api/Global-method-setInterval">官方文档说明：setInterval</a></p>

<p><a href="http://stackoverflow.com/questions/12477043/adding-timer-in-titanium-mobile-application">参考链接1</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XCode5 修改编译输出目录]]></title>
    <link href="http://jebai.github.io/blog/2013/12/21/ios-xiu-gai-bian-yi-shu-chu-mu-lu/"/>
    <updated>2013-12-21T12:52:52+08:00</updated>
    <id>http://jebai.github.io/blog/2013/12/21/ios-xiu-gai-bian-yi-shu-chu-mu-lu</id>
    <content type="html"><![CDATA[<p>XCode5中默认的工程编译输出目录是 ~/Library/Developer/Xcode/DerivedData。</p>

<p>在制作静态库时，不是很容易找到生成的静态库。</p>

<p>事实上，可以根据需要改变设置，使像静态库这样的编译输出文件可以方便的被找到。</p>

<!--more-->


<p>步骤如下：</p>

<p>1、在Xcode菜单中按如下路径打开对话框：</p>

<p>XCode->Preferences->Locations</p>

<p>2、点击DerivedData的高级设置选项</p>

<p><img src="http://jebai.github.io/images/2013/12/21/xcode1.jpg" title="Optional title attribute" alt="Alt text" /></p>

<p>3、将BuildLocation设置为Legacy</p>

<p><img src="http://jebai.github.io/images/2013/12/21/xcode2.jpg" title="Optional title attribute" alt="Alt text" /></p>

<p>4、这样编译出来的静态库就会在工程的SRCROOT对应的目录下生成一个build目录，</p>

<p><img src="http://jebai.github.io/images/2013/12/21/xcode3.jpg" title="Optional title attribute" alt="Alt text" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用octopress构建个人博客]]></title>
    <link href="http://jebai.github.io/blog/2013/11/14/yong-octopressgou-jian-ge-ren-bo-ke/"/>
    <updated>2013-11-14T08:45:00+08:00</updated>
    <id>http://jebai.github.io/blog/2013/11/14/yong-octopressgou-jian-ge-ren-bo-ke</id>
    <content type="html"><![CDATA[<p>用Octopress和Github Pages 可以很方便的构建免费的个人博客。</p>

<p>按如下步骤就可以构建一个新的博客。</p>

<!--more-->


<h4>1. 下载Octopress</h4>

<p>在准备存放仓库的目录将octopress代码下载下来</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress</span></code></pre></td></tr></table></div></figure>


<h4>2. 安装依赖的组件</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd octopress
</span><span class='line'>sudo gem install bundler
</span><span class='line'>sudo rbenv rehash
</span><span class='line'>sudo bundle install</span></code></pre></td></tr></table></div></figure>


<p>osx 默认安装了gem，这是ruby的包管理器</p>

<p>如果没有安装rbenv可以用brew来安装</p>

<p>如果没有安装brew,可以参考<a href="http://blog.csdn.net/chenyi8888/article/details/7345113" title="Mac安装Brew">这篇文章</a>来安装</p>

<p><a href="http://bundler.io/">了解bundler</a></p>

<p><a href="https://github.com/sstephenson/rbenv">了解rbenv</a></p>

<h4>3. 安装默认的样式</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<p><a href="http://rake.rubyforge.org/">了解rake</a></p>

<h4>4. 在github上新建仓库</h4>

<p>仓库需要命名为 username.github.io.</p>

<p>username要跟github用户名相同</p>

<h4>5. 在本地新建站点，同时部署站点的github信息</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<h4>6. 生成站点</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate</span></code></pre></td></tr></table></div></figure>


<h4>7. 创建一篇文章</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post["first blog"]</span></code></pre></td></tr></table></div></figure>


<p>这样会在source/_post目录下面创建一编文章，时间开头，md结尾，Mac下可以用<a href="http://mouapp.com/" title="访问Mou官方网站">Mou</a>来编辑md文件。</p>

<p>md代表是markdown格式的文件，可以被编译成html格式的文件。<a href="http://mouapp.com/" title="访问Mou官方网站">Markdown</a>正如字面意思，相对于html文件，没有那么多的标签，更符合人类的阅读习惯，易于编写。</p>

<h4>8. 本地预览站点</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>而后即可在浏览器中访问 <a href="http://0.0.0.0:4000">http://0.0.0.0:4000</a></p>

<h4>9. 部署站点</h4>

<p>如果预览没有什么问题，马上就可以部署到github上面了，只要一条命令就可以了。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<h4>10. 访问站点</h4>

<p><a href="http://jebai.github.io">http://username.github.io</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我为什么写博客]]></title>
    <link href="http://jebai.github.io/blog/2013/11/13/wo-wei-shi-yao-xie-bo-ke/"/>
    <updated>2013-11-13T20:42:00+08:00</updated>
    <id>http://jebai.github.io/blog/2013/11/13/wo-wei-shi-yao-xie-bo-ke</id>
    <content type="html"><![CDATA[<p>也许是因为遇上了github，在github上看见了许多很厉害的人，他们都用github来构建自己干净漂亮的blog，不由自主的也想要有这样的一亩三分地，来构筑自己的小屋，装修的漂漂亮亮的，记录自己的成长历程。</p>

<!--more-->


<p>github提供这样免费的地，又有octopress这样便利的工具，如要要求不是太高，也不用申请域名，于是我便开始写这个博客了。</p>

<p>在博客上分享一些自己学过的知识，与在笔记里记下自己备查的知识，效果是很不一样的。因为在博客上，大家都可以看得到，虚荣心的驱使，我们都想把自己较好的一面展示给别人，于是在写下知识时，便会思考的更多，写出来的东西也会更有条理。不觉之中，在这些思考的过程中，自己的水平也可以得到提高。</p>

<p>当然写博客，会花费一些时间，但是写博客的时间也是一个知识整理的过程，知识整理对任何人来说都是必要的，所以这些时间的花费是值得的。</p>
]]></content>
  </entry>
  
</feed>
